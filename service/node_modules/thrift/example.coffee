thrift = require './lib'
Cassandra = require './examples/Cassandra'
ttypes = require './examples/cassandra_types'

connection = thrift.createConnection("localhost", 9162)
client = thrift.createClient(Cassandra.Client, connection)

connection.on 'error', (err) ->
  console.error(err)

client.get_slice "Users", "js2", new ttypes.ColumnParent(column_family: "User"), new ttypes.SlicePredicate(slice_range: new ttypes.SliceRange(start: '', finish: '')), ttypes.ConsistencyLevel.ONE, (err, data) ->
  console.log ['get_slice'], err, data
#
#
#client.get "Users", "js2", new ttypes.ColumnPath(column_family: "User", column: "username"), ttypes.ConsistencyLevel.ONE, (err, data) ->
#  console.log(['get'], err, data)
#
##client.insert "Users", "js2", new ttypes.ColumnPath(column_family: "User", column: "username"), "value", Date.now(), ttypes.ConsistencyLevel.ONE
#
#
client.describe_version (err, data) ->
  console.log(['v'], err, data)

client.describe_keyspaces (err, data) ->
  console.log(['dk'], err, data)

client.batch_mutate "Users",
  {"js2": {
    "User": [
      new ttypes.Mutation(column_or_supercolumn:
        new ttypes.ColumnOrSuperColumn(column: new ttypes.Column(name: "usernane", value: "blah", timestamp: Date.now()))
      )
    ]
  }},
  ttypes.ConsistencyLevel.ONE,
  () ->

#
#//client.get_slice("Users", "1", new ColumnParent({column_family: "User", super_column: null}), new SlicePredicate({slice_range: new SliceRange({start: '', end: ''})}), ConsistencyLevel.ONE, function(err, data) {
#//  console.log(err, data);
#//});
#
#//client.get_slice("Keyspace", "key", new ttypes.ColumnParent({column_family: "ExampleCF", super_column: null}), new ttypes.SlicePredicate({slice_range: new ttypes.SliceRange({start: '', end: ''})}), ttypes.ConsistencyLevel.ONE, function(err, data) {
#//  console.log(err, data);
#//});
